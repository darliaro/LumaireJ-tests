name: Run API & E2E Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [run-tests]

concurrency:
  group: api-e2e-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: API & E2E Tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BASE_URL: ${{ secrets.BASE_URL }}

    steps:
      - name: Checkout tests
        uses: actions/checkout@v4

      - name: Checkout SUT
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/LumaireJ
          path: app

      - name: Cache SUT PDM & venv
        uses: actions/cache@v4
        with:
          key: pdm-app-${{ runner.os }}-${{ hashFiles('app/pdm.lock') }}
          restore-keys: pdm-app-
          path: |
            ~/.cache/pdm
            app/.venv

      - name: Setup PDM for SUT
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.13'

      - name: Install SUT deps
        working-directory: app
        run: pdm install

      - name: Start SUT (without Docker)
        working-directory: app
        run: |
          nohup pdm run dev &>/dev/null &
          sleep 5

      - name: Wait for HTTP server
        run: |
          timeout 60 bash -c "until curl --silent --fail http://localhost:8000/api/docs; do
            sleep 1
          done"

      - name: Cache test PDM & venv
        uses: actions/cache@v4
        with:
          key: pdm-test-${{ runner.os }}-${{ hashFiles('tests/pdm.lock') }}
          restore-keys: pdm-test-
          path: |
            ~/.cache/pdm
            tests/.venv

      - name: Install test deps
        working-directory: tests
        run: pdm install -G dev

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Allure CLI
        run: |
          mkdir -p $HOME/.allure
          wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz -O allure.tgz
          tar -xzf allure.tgz -C $HOME/.allure
          echo "$HOME/.allure/allure-2.34.1/bin" >> $GITHUB_PATH

      - name: Run tests
        run: pdm run test

      - name: Generate Allure Report
        run: pdm run report

      - name: Upload Allure artifacts
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  report-status:
    name: Report status back to main repo
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'repository_dispatch' }}
    steps:
      - name: Create or update check run in main repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_FOR_MAIN_REPO }}
          script: |
            const result = needs.test.result === 'success' ? 'success' : 'failure';
            await github.checks.create({
              owner: 'darliaro',
              repo: 'LumaireJ',
              name: 'API & E2E Tests',
              head_sha: '${{ github.event.client_payload.sha }}',
              status: 'completed',
              conclusion: result,
              output: {
                title: `API & E2E Tests ${result}`,
                summary: result === 'success'
                  ? '✅ All tests passed'
                  : '❌ Some tests failed'
              }
            });
