name: Run API & E2E Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [run-tests]

permissions:
  contents: read

concurrency:
  group: api-e2e-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:  # Main job: spin up SUT locally and run API/E2E tests
    name: API & E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BASE_URL: ${{ secrets.BASE_URL }}

    steps:
      - name: Checkout tests
        uses: actions/checkout@v4

      - name: Checkout SUT
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/LumaireJ
          path: app

      - name: Cache SUT PDM & venv
        uses: actions/cache@v4
        with:
          key: pdm-app-${{ runner.os }}-${{ hashFiles('app/pdm.lock') }}
          restore-keys: pdm-app-
          path: |
            ~/.cache/pdm
            app/.venv

      - name: Setup PDM for SUT
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.13'

      - name: Install SUT deps
        working-directory: app
        run: pdm install

      - name: Start SUT
        working-directory: app
        run: |
          nohup pdm run dev > ../app_uvicorn.log 2>&1 &
          echo $! > ../sut.pid
          sleep 3

      - name: Wait for HTTP server
        run: |
          timeout 90 bash -c "until curl --silent --fail http://localhost:8000; do
            sleep 2
          done"

      - name: Cache test PDM & venv
        uses: actions/cache@v4
        with:
          key: pdm-test-${{ runner.os }}-${{ hashFiles('tests/pdm.lock') }}
          restore-keys: pdm-test-
          path: |
            ~/.cache/pdm
            tests/.venv

      - name: Install test deps
        working-directory: tests
        run: pdm install -G dev

      - name: Install Playwright browsers
        working-directory: tests
        run: pdm run playwright install chromium

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Allure CLI
        run: |
          mkdir -p $HOME/.allure
          wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz -O allure.tgz
          tar -xzf allure.tgz -C $HOME/.allure
          echo "$HOME/.allure/allure-2.34.1/bin" >> $GITHUB_PATH

      - name: Run tests
        working-directory: tests
        run: pdm run test

      - name: Generate Allure Report
        if: always()
        working-directory: tests
        run: pdm run report || true

      - name: Upload Allure artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Upload SUT logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-logs
          path: app_uvicorn.log
          if-no-files-found: ignore

      - name: Stop SUT
        if: always()
        run: |
          if [[ -f sut.pid ]]; then
            kill -TERM "$(cat sut.pid)" 2>/dev/null || true
          fi

  report-status:  # Additional job: report status back to the main repo
    name: Report status back to main repo
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'repository_dispatch' && always() }}
    env:
      TEST_RESULT: ${{ needs.test.result }}
      HEAD_SHA:  ${{ github.event.client_payload.sha }}
    steps:
      - name: Post commit status back to LumaireJ
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_FOR_MAIN_REPO }}
          script: |
            // Map job conclusion to commit status
            const result = (process.env.TEST_RESULT || '').toLowerCase();
            const state = result === 'success' ? 'success'
                        : result === 'cancelled' ? 'failure'  // Treat cancelled as failure to unblock
                        : 'failure';

            await github.rest.repos.createCommitStatus({
              owner: 'darliaro',
              repo: 'LumaireJ',
              sha: process.env.HEAD_SHA,
              state,
              context: 'API & E2E Tests',
              description: state === 'success'
                ? 'All API/E2E tests passed ✅'
                : (result === 'cancelled'
                    ? 'Tests workflow was cancelled ⚠️'
                    : 'Some API/E2E tests failed ❌')
            });
